@mixin makeButtonClasses() {
	@each $key, $value in $__map--button-widths {
		&-#{$key} {
			width:#{$value};
		}
	}
}

@mixin makeBreakpoints($value) {
	@each $key, $value in $__map--grid-breakpoints {
		@media screen and (min-width: $value) {
      		@content;
    	}
	}	
}

// @mixin makeGridCells($key, $value, $__var--grid-columns) {
// 	@include makeBreakpoints($value) {
// 		@for $i from 1 through $__var--grid-columns {
// 			&.#{$key}-#{$i}{
// 				$base: ((100 / ($__var--grid-columns / $i)) * 1%);
// 				width:#{$base};
// 			}
// 		}
// 	}
// }

@mixin makeGridCells($key, $value, $__var--grid-columns) {
	@include makeBreakpoints($value) {
		@for $i from 1 through $__var--grid-columns {
			&.#{$key}-#{$i}{
				$base: ((100 / ($__var--grid-columns / $i)) * 1%);

				@if(map-has-key($__map--grid-gutters, $key)) {
					$gutter: map-get($__map--grid-gutters, $key);
					width:calc(#{$base} - #{$gutter});
					margin-left:($gutter / 2);
					margin-right:($gutter / 2);
				}

				@else {
					width:#{$base};
					
				}
			}
		}
	}
}

@mixin makeGridCellsWithGutters($key, $value, $__var--grid-columns) {
	@include makeBreakpoints($value) {
		@for $i from 1 through $__var--grid-columns {
			&.#{$key}-#{$i}{
				$base: ((100 / ($__var--grid-columns / $i)) * 1%);

				@if(map-has-key($__map--grid-gutters, $key)) {
					$gutter: map-get($__map--grid-gutters, $key);
					width:calc(#{$base} - #{$gutter});
					margin-left:($gutter / 2);
					margin-right:($gutter / 2);
				}
			}
		}
	}
}

@mixin makeGridRowGutters($key, $value) {
	@include makeBreakpoints($value) {
		@if(map-has-key($__map--grid-gutters, $key)) {
			$gutter: map-get($__map--grid-gutters, $key);
			margin-left:-$gutter;
			margin-right:-$gutter;
		}
	}
}